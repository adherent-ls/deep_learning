characters: &characters $"['blank'] + [item.strip() for item in open('vocab/word/synth_text_vocab', 'r', encoding='utf-8').readlines()] + ['end']"
max_length: &max_length 25
filter: &filter
  - name: LmdbImageFilter
    args:
  - name: LmdbOutVocabFilter
    args:
      characters: *characters
      max_length: *max_length
transform: &transform
  - name: LmdbImageDecode
    args:
  - name: ImageResize
    args:
      max_size: [ 32, -1 ]
  - name: ImagePilToNP
    args:
  - name: ImageNormal
    args:
  - name: ImageReshape
    args:
      permute_indices: [ 2, 0, 1 ]
  - name: LmdbStreamDecode
    args:
  - name: TextEncode
    args:
collate: &collate
  - name: BatchSplit
    args:
  - name: ImageCollate
    args:
  - name: LabelCollate
    args:
      max_length: max_length
  - name: NPToTensor
    args:
data:
  Train:
    collate: *collate
    filter: *filter
    transform: *transform
    Dataset:
      - name: LmdbDataset
        args:
          root: /home/data/data_old/lmdb/SynthText/train
  Eval:
    collate: *collate
    filter: *filter
    transform: *transform
    Dataset:
      - name: LmdbDataset
        args:
          root: /home/data/data_old/lmdb/SynthText/valid

model:
  - name: ResNet
    args:
      input_channel: 3
      output_channel: 512
  - name: BidirectionalLSTM
    args:
      input_size: 512
      hidden_size: 512
      output_size: 512
  - name: CTC
    args:
      in_channel: 512
      num_class: $len(*characters)
optim:
  Optimizer:
    name: torch.optim.Adam
    args:
      lr: 0.0005
      betas: [ 0.9 ,0.999 ]
      weight_decay: 0.0005
  Scheduler:
    name: Warmup
    args:
      warm: 10000
loss:
  weight: [ 1.0 ]
  Loss:
    - name: CTCLossProxy
      args:
        zero_infinity: True
metric:
  weight: [ 1.0 ]
  Decoder:
    - name: TextDecoder
      args:
        characters: *characters
  Metric:
    - name: TextMetric
      args:
